import{V as r,A as y}from"./AnimatedLabel-Y1v52lyK.js";import{r as x}from"./index-GOfKAnNf.js";const u=(t,n,e)=>t>=n&&t<=e,g=`....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#...`,z=t=>{const n=g.split(`
`),e=n.length,c=n[0].length,s=[],i={position:new r(-1,-1),direction:"up"},o=new Set;for(let p=0;p<e;p++)for(let d=0;d<c;d++)n[p][d]==="#"&&s.push(new r(d,p)),n[p][d]==="^"&&(i.position.x=d,i.position.y=p);for(;u(i.position.x,0,c-1)&&u(i.position.y,0,e-1);)o.add(`${i.position.x},${i.position.y}`),b(i,s);const l=new r(t.canvas.width/2,t.canvas.height/2),f=new y({ctx:t,label:`Animation in construction... Result for example input: ${o.size}`,position:l,opacity:0}).animateOpacity(1,1e3);x(t,[f])},b=(t,n)=>{const e=$[t.direction],c=t.position.add(e);for(const s of n)if(c.equals(s))return t.direction=O[t.direction],b(t,n);t.position=c},$={up:new r(0,-1),right:new r(1,0),down:new r(0,1),left:new r(-1,0)},O={up:"right",right:"down",down:"left",left:"up"},B=t=>{const n=g.split(`
`),e=n.length,c=n[0].length,s=[],i={position:new r(-1,-1),direction:"up"},o=new Set;for(let a=0;a<e;a++)for(let w=0;w<c;w++)n[a][w]==="#"&&s.push(new r(w,a)),n[a][w]==="^"&&(i.position.x=w,i.position.y=a);const l=new r(i.position.x,i.position.y),f=new Set;for(;u(i.position.x,0,c-1)&&u(i.position.y,0,e-1);){const a=I(i,s,o);a&&f.add(a),o.add(i.position.toString()),v(i,s)}f.delete(l.toString());const p=new r(t.canvas.width/2,t.canvas.height/2),d=new y({ctx:t,label:`Animation in construction... Result for example input: ${f.size}`,position:p,opacity:0}).animateOpacity(1,1e3);x(t,[d])},v=(t,n)=>{const e=h[t.direction],c=t.position.add(e);for(const s of n)if(c.equals(s)){t.direction=m[t.direction];return}t.position=c},h={up:new r(0,-1),right:new r(1,0),down:new r(0,1),left:new r(-1,0)},m={up:"right",right:"down",down:"left",left:"up"},A={up:"down",right:"left",down:"up",left:"right"},S=(t,n)=>t.filter(e=>e.y===n),D=(t,n)=>t.filter(e=>e.x===n),P=(t,n,e)=>{const c=S(t,n.y),s=D(t,n.x);let i=[];return e==="up"?i=s.filter(o=>o.y<n.y).sort((o,l)=>l.y-o.y):e==="down"?i=s.filter(o=>o.y>n.y).sort((o,l)=>o.y-l.y):e==="left"?i=c.filter(o=>o.x<n.x).sort((o,l)=>l.x-o.x):i=c.filter(o=>o.x>n.x).sort((o,l)=>o.x-l.x),i[0]||null},I=(t,n,e)=>{const c=h[t.direction],s=t.position.add(c);if(n.filter(f=>f.equals(s)).length>0||e.has(s.toString()))return null;const i=[];let o=s,l=t.direction;for(;o;)if(i.push(`${o},${l}`),o=P([...n,s],o.add(h[A[l]]),m[l]),l=m[l],o&&i.includes(`${o},${l}`))return s.toString();return null};export{z as part1,B as part2};
